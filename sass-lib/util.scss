            @import "reset.scss";
       
            .iconfont{
             font-family: 'iconfont';
            }
            @mixin flexBox {
                display: -webkit-box;
                //  display: -ms-flexbox;
                display: flex;
            }
            
            @mixin flex($num:1) {
                -webkit-box-flex: $num;
                flex: $num;
            }
            
            @mixin flex-direction($dir:row) {
                @if $dir==row {
                    -webkit-box-orient: horizontal;
                    flex-direction: row;
                }
                @else {
                    -webkit-box-orient: vertical;
                    flex-direction: column;
                }
            }
            
            //水平垂直居中
            @mixin flex-center {
                @include flexBox;
                @include flex-direction("column");
                -webkit-box-pack: center;
                justify-content: center;
                -webkit-box-align: center;
                align-items: center;
            }
            /* clearfix */
            
            @mixin clearfix {
                &:after {
                    clear: both;
                    content: '.';
                    display: block;
                    height: 0;
                    line-height: 0;
                    overflow: hidden;
                }
                *height: 1%;
            }
            /*ellipsis*/
            
            @mixin ell() {
                overflow: hidden;
                -ms-text-overflow: ellipsis;
                text-overflow: ellipsis;
                white-space: nowrap;
            }
            /*display:inline-block;IE6,7块级元素对inline-block支持不好，需要触发Layout*/
            
            @mixin dib() {
                display: inline-block;
                *display: inline;
                *zoom: 1;
            }
            /* minheight  最小高度，IE6不支持min-height，但是使用height能达到一样的效果*/
            
            @mixin minHeight($min-height) {
                min-height: $min-height;
                height: auto !important;
                height: $min-height;
            }
            /* 箭头arrow(direction,size,color);*/
            
            @mixin arrow($direction, $size, $color) {
                width: 0;
                height: 0;
                line-height: 0;
                font-size: 0;
                overflow: hidden;
                border-width: $size;
                cursor: pointer;
                @if $direction==top {
                    border-style: dashed dashed solid dashed;
                    border-color: transparent transparent $color transparent;
                    border-top: none;
                }
                @else if $direction==bottom {
                    border-style: solid dashed dashed dashed;
                    border-color: $color transparent transparent transparent;
                    border-bottom: none;
                }
                @else if $direction==right {
                    border-style: dashed dashed dashed solid;
                    border-color: transparent transparent transparent $color;
                    border-right: none;
                }
                @else if $direction==left {
                    border-style: dashed solid dashed dashed;
                    border-color: transparent $color transparent transparent;
                    border-left: none;
                }
            }
            /*transition*/
            
            @mixin transition($property, $value) {
                @each $prefix in -webkit-,
                -moz-,
                -ms-,
                -o-,
                '' {
                    #{$prefix}#{$property}: $value;
                }
            }
            /*响应式断点*/
            
            @mixin breakpoint($point) {
                @if $point==large {
                    @media (min-width: 64.375em) {
                        @content;
                    }
                }
                @else if $point==medium {
                    @media (min-width: 50em) {
                        @content;
                    }
                }
                @else if $point==small {
                    @media (min-width: 37.5em) {
                        @content;
                    }
                }
            }
            /*opacity*/
            
            @mixin opacity($opacity) {
                opacity: $opacity;
                $opacity-ie: $opacity * 100;
                filter: alpha(opacity=$opacity-ie);
            }
            /*绝对定位*/
            
            @mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
                top: $top;
                right: $right;
                bottom: $bottom;
                left: $left;
                position: absolute;
            }
             /*行高*/
            @mixin line-height($heightValue: 12) {
                line-height: $heightValue + px;
            }